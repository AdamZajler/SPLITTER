{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/js/Splitter.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["class Splitter{\r\n    constructor(){\r\n        this.isInputEmpty();\r\n        this.clickableTip();\r\n    }\r\n    \r\n    isInputEmpty(){\r\n        const self = this;\r\n        \r\n        // Get Bill & People input\r\n        let inputs = document.querySelectorAll(\"input[name='bill'], input[name='people']\")\r\n        \r\n        inputs.forEach((input) => {\r\n            // If user is typing nothing or 0 add class error, \r\n            // otherwise remove those classes\r\n            input.addEventListener(\"input\", function () {\r\n                if(this.value === \"\" || this.value === \"0\"){\r\n                    this.closest(\"label\").classList.add(\"error\")\r\n                }else{\r\n                    this.closest(\"label\").classList.remove(\"error\")\r\n                }\r\n            });\r\n            input.addEventListener(\"blur\", function () {\r\n                // On leave calculate result\r\n                self.caluclate();\r\n\r\n                // If user is leaving with nothing or 0 add class error, \r\n                // otherwise remove those classes\r\n                if(this.value === \"\" || this.value === \"0\"){\r\n                    this.closest(\"label\").classList.add(\"error\")\r\n                }else{\r\n                    this.closest(\"label\").classList.remove(\"error\")\r\n                }\r\n            });\r\n            \r\n            // When user is typing calculate everything\r\n            input.addEventListener(\"input\", function () {\r\n                // When user is typing calculate result\r\n                self.caluclate();\r\n            })\r\n        })\r\n    }\r\n\r\n    clickableTip(){\r\n        const self = this;\r\n\r\n        // Get all tip options\r\n        let tips = document.querySelectorAll(\".tips > .tip\");\r\n\r\n        // Check if any tip has \"active\" class, if there is any, remove it's class\r\n        function checkOthers(tip){\r\n            for(let i=0; i<tips.length; i++){\r\n                if(tips[i].classList.contains(\"active\") & tips[i] != tip){\r\n                    tips[i].classList.remove(\"active\")\r\n                }\r\n            }\r\n        }\r\n\r\n        tips.forEach((tip) => {\r\n            tip.addEventListener(\"click\", function() {\r\n                checkOthers(tip);\r\n                this.classList.toggle(\"active\");\r\n\r\n                // When user is clicking calculate result\r\n                self.caluclate();\r\n            })\r\n        })\r\n    }\r\n\r\n    checkAllFields(){\r\n        let bill = document.querySelector(\"input[name='bill']\");\r\n        let tip = document.querySelector(\".tips > .tip.active\");\r\n        let people = document.querySelector(\"input[name='people']\");\r\n        \r\n        if( bill.value == 0 || people.value == 0 || tip == null) {\r\n            document.querySelector(\".summary-amount h2\").textContent = \"$0.00\";\r\n            document.querySelector(\".summary-total h2\").textContent = \"$0.00\";\r\n            return false;\r\n        };\r\n       \r\n        // If tip is selected but it's custom \r\n        if(tip != null && tip.classList.contains(\"tip-custom\")){\r\n            if(tip.value == 0) {\r\n                document.querySelector(\".summary-amount h2\").textContent = \"$0.00\";\r\n                document.querySelector(\".summary-total h2\").textContent = \"$0.00\";\r\n                return false;\r\n            };\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    caluclate(){\r\n        // If any field is filled wrong\r\n        if(this.checkAllFields() == false) return;\r\n\r\n        // Show RESET button\r\n        document.querySelector(\".reset > .btn\").classList.add(\"active\");\r\n\r\n        // Get all fields values\r\n        let textBill = document.querySelector(\"input[name='bill']\").value;\r\n        let textTip = document.querySelector(\".tips > .tip.active\");\r\n        let textPeople = document.querySelector(\"input[name='people']\").value;\r\n        let tipHolder;\r\n\r\n        // If tip field is custom get it's value\r\n        if(textTip.classList.contains(\"tip-custom\")){\r\n            tipHolder = textTip.value / 100;\r\n        }else{\r\n            // If tip field is just div, then cut it's \"%\"\r\n            textTip = textTip.textContent;\r\n            tipHolder = textTip.replace(\"%\", \"\");\r\n            tipHolder = parseInt(tipHolder) / 100;\r\n        }\r\n\r\n        // Make every string a integer\r\n        let bill = parseFloat(textBill);\r\n        let tip = parseFloat(bill * tipHolder);\r\n        let people = parseInt(textPeople);\r\nconsole.log(\"bill: \", bill, \"tip: \", tip, \" people: \", people)\r\n\r\n        let costs = bill + tip;\r\n        let personTip = tip / people;\r\n        let personTotal = costs / people;\r\n        console.log(\"costs: \", costs, \"personTip: \", personTip, \" personTotal: \", personTotal)\r\n\r\n        document.querySelector(\".summary-amount h2\").textContent = `$${personTip.toFixed(2)}`;\r\n        document.querySelector(\".summary-total h2\").textContent = `$${personTotal.toFixed(2)}`;\r\n    }\r\n\r\n    static reset(){\r\n        if(!document.querySelector(\".reset > .btn.active\")) return;\r\n\r\n        document.querySelector(\"input[name='bill']\").value = null;\r\n        document.querySelector(\".tips > .tip.active\").classList.remove(\"active\")\r\n        document.querySelector(\"input[name='people']\").value = null;\r\n\r\n        document.querySelector(\".summary-amount h2\").textContent = \"$0.00\";\r\n        document.querySelector(\".summary-total h2\").textContent = \"$0.00\";\r\n        document.querySelector(\".reset > .btn\").classList.remove(\"active\");\r\n    }\r\n}\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    new Splitter;\r\n\r\n    document.querySelector(\".btn\").addEventListener(\"click\", function () {\r\n        Splitter.reset()\r\n    })\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["Splitter","this","isInputEmpty","clickableTip","document","querySelector","value","classList","remove","textContent","self","querySelectorAll","forEach","input","addEventListener","closest","add","caluclate","tips","tip","i","length","contains","checkOthers","toggle","bill","people","checkAllFields","tipHolder","textBill","textTip","textPeople","replace","parseInt","parseFloat","console","log","costs","personTip","personTotal","toFixed","window","reset","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}